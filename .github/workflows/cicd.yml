# This is a basic workflow to help you get started with Actions
name: Connect to an AWS role from a GitHub repository

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: ap-southeast-1  # Change to reflect your region

permissions:
  id-token: write    # Required for requesting the OIDC JWT
  contents: read     # Required for actions/checkout

jobs:
  AssumeRoleAndDeploy:
    runs-on: ubuntu-latest

    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::542741497010:role/GitHubAction-AssumeRoleWithAction # Update with your IAM role ARN
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: WhoAmI (verify role assumption)
        run: aws sts get-caller-identity
        

      # --- Terraform Phase 1: Bootstrap Artifacts Bucket ---
      - name: Init Bootstrap Terraform
        run: terraform init
        working-directory: ./terraform/bootstrap

      - name: Apply Bootstrap Terraform
        run: terraform apply -auto-approve -input=false
        working-directory: ./terraform/bootstrap

      - name: Get bucket name
        id: get_bucket
        run: |
          BUCKET_NAME=$(terraform output -raw artifact_bucket_name)
          echo "bucket_name=$BUCKET_NAME" >> "$GITHUB_OUTPUT"
        working-directory: ./terraform/bootstrap

      # --- Build Frontend (React) ---
      - name: Install dependencies for frontend
        run: npm install
        working-directory: ./frontend 

      - name: Build frontend
        run: npm run build
        working-directory: ./frontend

      - name: Zip frontend build
        run: zip -r frontend.zip build
        working-directory: ./frontend
      
      - name: Upload frontend.zip to S3
        run: aws s3 cp frontend.zip s3://${{ steps.get_bucket.outputs.bucket_name }}/frontend.zip
        working-directory: ./frontend

        # --- Build Backend (Node.js) NOT DONE---

      # --- Terraform Phase 2: Main Application Infrastructure ---
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.5  # Use your preferred version

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform/main # Change to your Terraform directory if needed

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./terraform/main

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: ./terraform/main

      - name: Terraform Apply (main branch only)
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
        working-directory: ./terraform/main
